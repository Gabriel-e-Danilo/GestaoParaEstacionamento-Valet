// <auto-generated />
using System;
using GestaoParaEstacionamento.Infraestrutura.ORM.Compartilhado;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GestaoParaEstacionamento.Infraestrutura.ORM.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GestaoParaEstacionamento.Core.Dominio.ModuloRecepcao.Entrada", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("DataHoraEntrada")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataHoraEntrada");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Observacoes");

                    b.HasKey("Id");

                    b.ToTable("Tb_Entrada", (string)null);
                });

            modelBuilder.Entity("GestaoParaEstacionamento.Core.Dominio.ModuloRecepcao.Entrada", b =>
                {
                    b.OwnsOne("GestaoParaEstacionamento.Core.Dominio.ModuloRecepcao.ValueObjects.Ticket", "Ticket", b1 =>
                        {
                            b1.Property<Guid>("EntradaId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Numero")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasColumnName("Ticket")
                                .HasDefaultValueSql("nextval('public.ticket_seq')");

                            b1.HasKey("EntradaId");

                            b1.ToTable("Tb_Entrada");

                            b1.WithOwner()
                                .HasForeignKey("EntradaId");
                        });

                    b.OwnsOne("GestaoParaEstacionamento.Core.Dominio.ModuloRecepcao.ValueObjects.VeiculoInfo", "Veiculo", b1 =>
                        {
                            b1.Property<Guid>("EntradaId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Cor")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("character varying(30)")
                                .HasColumnName("Veiculo_Cor");

                            b1.Property<string>("Modelo")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("Veiculo_Modelo");

                            b1.HasKey("EntradaId");

                            b1.ToTable("Tb_Entrada");

                            b1.WithOwner()
                                .HasForeignKey("EntradaId");

                            b1.OwnsOne("GestaoParaEstacionamento.Core.Dominio.ModuloRecepcao.ValueObjects.CpfHospede", "CpfHospede", b2 =>
                                {
                                    b2.Property<Guid>("VeiculoInfoEntradaId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Numeros")
                                        .IsRequired()
                                        .HasMaxLength(14)
                                        .HasColumnType("character varying(14)")
                                        .HasColumnName("Veiculo_CpfHospede");

                                    b2.HasKey("VeiculoInfoEntradaId");

                                    b2.ToTable("Tb_Entrada");

                                    b2.WithOwner()
                                        .HasForeignKey("VeiculoInfoEntradaId");
                                });

                            b1.OwnsOne("GestaoParaEstacionamento.Core.Dominio.ModuloRecepcao.ValueObjects.Placa", "Placa", b2 =>
                                {
                                    b2.Property<Guid>("VeiculoInfoEntradaId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Valor")
                                        .IsRequired()
                                        .HasMaxLength(10)
                                        .HasColumnType("character varying(10)")
                                        .HasColumnName("Veiculo_Placa");

                                    b2.HasKey("VeiculoInfoEntradaId");

                                    b2.HasIndex("Valor")
                                        .IsUnique();

                                    b2.ToTable("Tb_Entrada");

                                    b2.WithOwner()
                                        .HasForeignKey("VeiculoInfoEntradaId");
                                });

                            b1.Navigation("CpfHospede")
                                .IsRequired();

                            b1.Navigation("Placa")
                                .IsRequired();
                        });

                    b.Navigation("Ticket")
                        .IsRequired();

                    b.Navigation("Veiculo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
